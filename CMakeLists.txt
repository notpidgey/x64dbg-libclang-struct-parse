# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	set_property(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS cmake.toml)
endif()

project(libclang-struct-parse)

# Target: libclang
add_library(libclang INTERFACE)

target_include_directories(libclang INTERFACE
	"extern/include"
)

target_link_libraries(libclang INTERFACE
	"${CMAKE_CURRENT_SOURCE_DIR}/extern/lib/libclang.lib"
)

# Target: libclang-struct-parse
set(libclang-struct-parse_SOURCES
	cmake.toml
	"src/main.cpp"
)

add_executable(libclang-struct-parse)

target_sources(libclang-struct-parse PRIVATE ${libclang-struct-parse_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${libclang-struct-parse_SOURCES})

target_compile_features(libclang-struct-parse PRIVATE
	cxx_std_23
)

target_include_directories(libclang-struct-parse PRIVATE
	include
)

if(NOT TARGET libclang)
	message(FATAL_ERROR "Target \"libclang\" referenced by \"libclang-struct-parse\" does not exist!")
endif()

target_link_libraries(libclang-struct-parse PRIVATE
	libclang
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT libclang-struct-parse)
endif()
